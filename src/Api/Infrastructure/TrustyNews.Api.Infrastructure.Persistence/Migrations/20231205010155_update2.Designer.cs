// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrustyNews.Api.Infrastructure.Persistence.Context;

#nullable disable

namespace TrustyNews.Api.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(TrustyNewsContext))]
    [Migration("20231205010155_update2")]
    partial class update2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.News", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsTrusty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("NewsCoverPhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("news", "dbo");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.NewsBookmark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NewsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("NewsId");

                    b.ToTable("newsbookmarks", "dbo");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.NewsComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NewsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("NewsId");

                    b.ToTable("newscomments", "dbo");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.NewsCoverPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NewsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhotoBase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("user-photos/ifnwrbxcragwe0bdnugz");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("NewsId")
                        .IsUnique();

                    b.ToTable("newscoverphotos", "dbo");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.NewsTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("NewsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TagName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.ToTable("newstags", "dbo");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.NewsVote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("NewsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VoteType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("NewsId");

                    b.ToTable("newsvotes", "dbo");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConfirmedUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsEmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPhoneConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsTrustedUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserPhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("users", "dbo");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.UserPhoto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhotoBase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("user-photos/ifnwrbxcragwe0bdnugz");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById")
                        .IsUnique();

                    b.ToTable("userphotos", "dbo");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.News", b =>
                {
                    b.HasOne("TrustyNews.Api.Core.Domain.Models.User", "CreatedBy")
                        .WithMany("News")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.NewsBookmark", b =>
                {
                    b.HasOne("TrustyNews.Api.Core.Domain.Models.User", "CreatedUser")
                        .WithMany("NewsBookmarks")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrustyNews.Api.Core.Domain.Models.News", "News")
                        .WithMany("NewsBookmarks")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedUser");

                    b.Navigation("News");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.NewsComment", b =>
                {
                    b.HasOne("TrustyNews.Api.Core.Domain.Models.User", "CreatedBy")
                        .WithMany("NewsComments")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrustyNews.Api.Core.Domain.Models.News", "News")
                        .WithMany("NewsComments")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("News");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.NewsCoverPhoto", b =>
                {
                    b.HasOne("TrustyNews.Api.Core.Domain.Models.User", "CreatedBy")
                        .WithMany("NewsCoverPhotos")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrustyNews.Api.Core.Domain.Models.News", "News")
                        .WithOne("NewsCoverPhoto")
                        .HasForeignKey("TrustyNews.Api.Core.Domain.Models.NewsCoverPhoto", "NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("News");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.NewsTag", b =>
                {
                    b.HasOne("TrustyNews.Api.Core.Domain.Models.News", "News")
                        .WithMany("NewsTags")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.NewsVote", b =>
                {
                    b.HasOne("TrustyNews.Api.Core.Domain.Models.User", "CreatedBy")
                        .WithMany("NewsVotes")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TrustyNews.Api.Core.Domain.Models.News", "News")
                        .WithMany("NewsVotes")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("News");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.UserPhoto", b =>
                {
                    b.HasOne("TrustyNews.Api.Core.Domain.Models.User", "CreatedBy")
                        .WithOne("UserPhoto")
                        .HasForeignKey("TrustyNews.Api.Core.Domain.Models.UserPhoto", "CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.News", b =>
                {
                    b.Navigation("NewsBookmarks");

                    b.Navigation("NewsComments");

                    b.Navigation("NewsCoverPhoto");

                    b.Navigation("NewsTags");

                    b.Navigation("NewsVotes");
                });

            modelBuilder.Entity("TrustyNews.Api.Core.Domain.Models.User", b =>
                {
                    b.Navigation("News");

                    b.Navigation("NewsBookmarks");

                    b.Navigation("NewsComments");

                    b.Navigation("NewsCoverPhotos");

                    b.Navigation("NewsVotes");

                    b.Navigation("UserPhoto");
                });
#pragma warning restore 612, 618
        }
    }
}
